plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.ssinhwa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("org.springframework.kafka:spring-kafka-test")
    // For JSON
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.1'

    // Model mapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')

    // Kafka
    implementation("org.springframework.kafka:spring-kafka")

    // 1. Use Guava in your implementation only:
    implementation("com.google.guava:guava:31.1-jre")

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
}

tasks.named('test') {
    useJUnitPlatform()
}
